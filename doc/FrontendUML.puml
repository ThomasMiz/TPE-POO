@startuml

class AppLauncher{
+{static} void main(String[] args)
+void start(Stage primaryStage)
}

class AppMenuBar{
+AppMenuBar()
}

class MainFrame{
+MainFrame(CanvasState canvasState)
}

class StatusPane{
-Label statusLabel
+StatusPane()
+void updateStatus(String text)
}

class CanvasPane{
-Canvas canvas
+CanvasPane(double width, double height)
+Canvas getCanvas()
}

class PaintPane{
-{static} Color SELECTED_FIGURE_BORDER_COLOR
-{static} Color DEFAULT_FIGURE_FILL_COLOR
-{static} Color DEFAULT_FIGURE_BORDER_COLOR
-{static} double DEFAULT_FIGURE_BORDER_SIZE
-{static} double MIN_FIGURE_BORDER_SIZE
-{static} double MAX_FIGURE_BORDER_sIZE

-CanvasState canvasState;
-Canvas canvas
-GraphicsContext gc

-Color borderColor
-Color fillColor
-double borderSize

-ToggleButton selectionButton
-ToggleButton rectangleButton
-ToggleButton circleButton
-ToggleButton squareButton
-ToggleButton ellipseButton
-ToggleButton lineButton
-ToggleGroup figureAndSelectionToolsGroup
-Button deleteButton
-Button toBottomButton
-Button toTopButton
-Slider borderSizeSlider
-ColorPicker borderColorPicker
-ColorPicker fillColorPicker

-Point startPoint
-Set<Figure> selectedFigures
-StatusPane statusPane

+PaintPane(CanvasState canvasState, StatusPane statusPane)
+void redrawCanvas()
+Color getFillColor()
+Color getBorderColor()
+double getBorderSize()
+StatusPane getStatusPane()
+void reset()
-void onMousePressed(MouseEvent event)
-void onMouseRelease(MouseEvent event)
-void onMouseMoved(MouseEvent event)
-void onMouseClicked(MouseEvent event)
-void onMouseDragged(MouseEvent event)
-void onBorderSliderValueChanged(ObservableValue<? extends Number> observableValue, Number number, Number newValue)
-void onBorderColorChanged(ObservableValue<? extends Color> observableValue, Color color, Color newValue)
-void onFillColorChanged(ObservableValue<? extends Color> observableValue, Color color, Color newValue)
}

AppLauncher ..down> MainFrame
MainFrame ..right> StatusPane
MainFrame ..> PaintPane
MainFrame ..left> AppMenuBar
PaintPane ..right> CanvasPane

AppLauncher -down[hidden]- PaintPane

abstract class FigureTool{
-CanvasState canvasState
-PaintPane paintPane
+FigureTool(CanvasState canvasState,PaintPane paintPane)
+void createFigure(Point startPoint, Point endPoint)
#{abstract} Figure createInstance(Point startPoint, Point endPoint)
}

class CircleTool extends FigureTool{
+CircleTool(CanvasState canvasState, PaintPane paintPane)
+Figure createInstance(Point startPoint, Point endPoint)
}

class EllipseTool extends FigureTool{
+EllipseTool(CanvasState canvasState, PaintPane paintPane)
+Figure createInstance(Point startPoint, Point endPoint)
}

class LineTool extends FigureTool{
+LineTool(CanvasState canvasState, PaintPane paintPane)
+Figure createInstance(Point startPoint, Point endPoint)
}

class RectangleTool extends FigureTool{
+RectangleTool(CanvasState canvasState, PaintPane paintPane)
+Figure createInstance(Point startPoint, Point endPoint)
}

class SquareTool extends FigureTool{
+SquareTool(CanvasState canvasState, PaintPane paintPane)
+Figure createInstance(Point startPoint, Point endPoint)
}

CircleTool -[hidden] EllipseTool
EllipseTool -[hidden] LineTool
LineTool -[hidden] RectangleTool
RectangleTool -[hidden] SquareTool
FigureTool -up[hidden]- PaintPane
PaintPane ..> FigureTool


note right of CanvasPane
This class extends of Pane
end note

note top of AppLauncher
This class extends of Application
end note

note top of AppMenuBar
This class extends of MenuBar
end note

note top of MainFrame
This class extends of BorderPane
end note

note top of StatusPane
This class extends of BorderPane
end note

note left of PaintPane
This class extends of HBox
end note


@enduml